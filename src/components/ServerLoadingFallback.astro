---
// A reusable fallback component for server:defer loading states
interface Props {
  title?: string;
  message?: string;
  fields?: {
    label: string;
    width?: 'sm' | 'md' | 'lg' | 'full'; // Size options for the skeleton loading field
  }[];
}

// Default props with sensible defaults
const {
  title = "Loading Data...",
  message = "Please wait while we fetch the data...",
  fields = [
    { label: "Loading field 1", width: 'md' },
    { label: "Loading field 2", width: 'lg' },
    { label: "Loading field 3", width: 'full' },
  ],
} = Astro.props;

// Map width options to tailwind classes
const widthClasses = {
  sm: 'w-20',
  md: 'w-48',
  lg: 'w-64',
  full: 'w-full',
};
---

<div class="bg-gray-100 p-6 rounded-lg shadow-md">
  <h2 class="text-2xl font-bold mb-4">{title}</h2>
  <p class="mb-4 text-gray-600">{message}</p>
  
  <div class="mt-6 space-y-4">
    {fields.map((field) => (
      <div class="bg-white/50 p-4 rounded animate-pulse">
        <h3 class="font-semibold">{field.label}:</h3>
        <div class={`h-5 bg-gray-200 rounded mt-1 ${widthClasses[field.width || 'md']}`}></div>
      </div>
    ))}
  </div>
</div>